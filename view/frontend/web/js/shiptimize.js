/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/js/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./shiptmize.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./css/leaflet.css":
/*!*************************!*\
  !*** ./css/leaflet.css ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jc3MvbGVhZmxldC5jc3M/OTU1NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIuL2Nzcy9sZWFmbGV0LmNzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./css/leaflet.css\n");

/***/ }),

/***/ "./js/shiptimize-gmaps.js":
/*!********************************!*\
  !*** ./js/shiptimize-gmaps.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shiptimizeUtils = __webpack_require__(/*! ./shiptimize-utils.js */ \"./js/shiptimize-utils.js\");\n\nvar _shiptimizeUtils2 = _interopRequireDefault(_shiptimizeUtils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ShiptimizeGmaps = function () {\n    function ShiptimizeGmaps(key) {\n        _classCallCheck(this, ShiptimizeGmaps);\n\n        this.isScriptLoaded = false;\n        this.markers = [];\n        this.map = null;\n        this.pickupPoints = [];\n        this.key = key;\n\n        /** \n         * the root url for the icons it's different for every platform  \n         * make sure to include a trailing / \n         */\n        this.icon_folder = shiptimize_icon_folder;\n        this.icon_selected = shiptimize_icon_folder + 'selected.png';\n        this.icon_default = shiptimize_icon_folder + 'default.png';\n        this.current_icon = this.icon_default;\n    }\n\n    /** \n     * Checks if we have an icon for this carrier.\n     * If yes then change the carrier icon\n     * If not then use the default icon\n     * \n     * @param int carrier_id - the carrier id \n     */\n\n\n    _createClass(ShiptimizeGmaps, [{\n        key: 'setCarrierIcon',\n        value: function setCarrierIcon(carrier_id) {\n            var carrier_icon_url = this.icon_folder + '' + carrier_id + '.png';\n            this.current_icon = _shiptimizeUtils2.default.isUrlValid(carrier_icon_url) ? carrier_icon_url : this.icon_default;\n        }\n\n        /** \n         * if the script has not been loaded , load it \n         */\n\n    }, {\n        key: 'grantReady',\n        value: function grantReady() {\n            if (!this.isScriptLoaded) {\n                this.loadScript();\n            }\n        }\n    }, {\n        key: 'loadScript',\n        value: function loadScript() {\n            if (typeof google == 'undefined' || typeof google.maps == 'undefined') {\n                _shiptimizeUtils2.default.injectExternalScript(\"https://maps.googleapis.com/maps/api/js?key=\" + this.key + \"&callback=shiptimize.loadMap\");\n            }\n            this.isScriptLoaded = true;\n        }\n\n        /** \n         * Load the map into the element \n         * This function needs the script to be loaded \n         */\n\n    }, {\n        key: 'loadMap',\n        value: function loadMap() {\n            console.log(\"displaying map on container with \" + jQuery(\".shiptimize-pickup__map\").width() + \" \" + jQuery(\".shiptimize-pickup__map\").height(), jQuery(\".shiptimize-pickup__map\").get(0));\n            this.map = new google.maps.Map(jQuery(\".shiptimize-pickup__map\").get(0), {\n                center: { lat: -34.397, lng: 150.644 },\n                zoom: 16,\n                mapTypeControl: false\n            });\n        }\n\n        /** \n         * center the map \n         */\n\n    }, {\n        key: 'centerMap',\n        value: function centerMap(lat, lng) {\n            this.map.setCenter(new google.maps.LatLng(lat, lng));\n        }\n\n        /** \n         * Extract the country code from a geocode result\n         * @param geocode - a google.maps.Geocoder result \n         * @return string alpha-2 code for the country name \n         */\n\n    }, {\n        key: 'getCountryCodeFromResult',\n        value: function getCountryCodeFromResult(geocode) {\n            if (typeof geocode.address_components == \"undefined\") {\n                return \"\";\n            }\n\n            var components = geocode.address_components;\n            for (var i = 0; i < components.length; ++i) {\n                var types = components[i].types;\n\n                for (var j = 0; j < types.length; ++j) {\n                    if (types[j] == 'country') {\n                        return components[i].short_name;\n                    }\n                }\n            }\n        }\n\n        /**\n         *  \n         * @param shippingData, the address parts       \n         * @param f_callback , the function to call when all mighty google returns a result \n         */\n\n    }, {\n        key: 'geocode',\n        value: function geocode(shippingData, f_callback) {\n            var _this = this;\n\n            if (typeof google == 'undefined') {\n                //script not loaded yet\n                setTimeout(function () {\n                    _this.geocode(shippingData, f_callback);\n                }, 200);\n                return;\n            }\n\n            var geocoder = new google.maps.Geocoder();\n            var me = this;\n\n            var address = shippingData.Address.Streetname1 + \" \" + shippingData.Address.Streetname2 + \" \" + shippingData.Address.postalCode + \" \" + shippingData.Address.City + \" \" + shippingData.Address.State + \" \" + shippingData.Address.Country;\n            console.log('geocoding ' + address);\n\n            geocoder.geocode({ 'address': address }, function (results, status) {\n                var geocode = { iso2: '', lat: '', lng: '' };\n\n                if (status == 'OK') {\n                    geocode = results[0];\n                } else {\n                    console.log('Geocode was not successful for the following reason: ' + status);\n                    f_callback(geocode);\n                    return;\n                }\n\n                var latlng = geocode.geometry.location;\n\n                geocode.iso2 = me.getCountryCodeFromResult(geocode);\n                geocode.lat = latlng.lat();\n                geocode.lng = latlng.lng();\n\n                f_callback(geocode);\n            });\n        }\n    }, {\n        key: 'clearMarkers',\n        value: function clearMarkers() {\n            if (this.markers.length > 0) {\n                for (var i = 0; i < this.markers.length; ++i) {\n                    this.markers[i].setMap(null);\n                }\n\n                this.markers = [];\n            }\n        }\n\n        /** \n         * Add the markers to map \n         * @param array pickupPoints - an array of pickupPoints\n         * @param callback - a function to call when the marker is clicked \n         */\n\n    }, {\n        key: 'addMarkers',\n        value: function addMarkers(pickupPoints, callback) {\n            var _this2 = this;\n\n            this.pickupPoints = pickupPoints;\n\n            var _loop = function _loop(x) {\n                _this2.markers[x] = _this2.getMarker(pickupPoints[x]);\n                //    we need to do this because the values for lat,lng we have are rounded, so they will not match the ones returned by google\n                pickupPoints[x].marker = _this2.markers[x];\n\n                _this2.markers[x].addListener('click', function () {\n                    if (typeof callback != 'undefined') {\n                        callback(x);\n                    }\n                });\n            };\n\n            for (var x = 0; x < pickupPoints.length; ++x) {\n                _loop(x);\n            }\n\n            this.fitBounds();\n        }\n\n        /** \n         * Return a marker for the gmaps \n         */\n\n    }, {\n        key: 'getMarker',\n        value: function getMarker(pickupPoint, callback) {\n            var marker = new google.maps.Marker({\n                position: new google.maps.LatLng(pickupPoint.Lat, pickupPoint.Long),\n                map: this.map,\n                icon: {\n                    url: this.current_icon\n                }\n            });\n\n            return marker;\n        }\n    }, {\n        key: 'fitBounds',\n        value: function fitBounds() {\n            var bounds = new google.maps.LatLngBounds();\n            for (var x = 0; x < this.markers.length; ++x) {\n                bounds.extend(this.markers[x].getPosition());\n            }\n            this.map.fitBounds(bounds);\n        }\n\n        /**\n         * Reset all markers  \n         * Select the marker of index idx in map \n         * @param int idx - the index to select \n         */\n\n    }, {\n        key: 'selectMarkerByIdx',\n        value: function selectMarkerByIdx(idx) {\n            for (var i = 0; i < this.markers.length; ++i) {\n                this.markers[i].setIcon(idx == i ? this.icon_selected : this.current_icon);\n            }\n        }\n    }]);\n\n    return ShiptimizeGmaps;\n}();\n\nexports.default = ShiptimizeGmaps;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/shiptimize-gmaps.js\n");

/***/ }),

/***/ "./js/shiptimize-magento.js":
/*!**********************************!*\
  !*** ./js/shiptimize-magento.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ShiptmizeMagento = function () {\n  function ShiptmizeMagento() {\n    _classCallCheck(this, ShiptmizeMagento);\n\n    this.bootstrap();\n    this.rate_carrier = {};\n    this.rate_requested = false;\n  }\n\n  /**   \n   * If it's a multi step ajax checkout.. we don't try to understand  what convoluted logic the theme developers have going on, but just wait for the \n   * methods to be included \n   *\n   * Furthermore we are plugin into the footer to inject the map, but we can't guarantee it will be included in the outer body tag, so we need to do that after load. \n   * If there is a table rate present we need to ask the server if the selected method has pickup \n   */\n\n\n  _createClass(ShiptmizeMagento, [{\n    key: \"bootstrap\",\n    value: function bootstrap() {\n      var _this = this;\n\n      //Not ideal, but also not horrendous wait for the element to exist \n      if (jQuery(\"input[type='radio']:checked\").size() == 0) {\n        setTimeout(function () {\n          _this.bootstrap();\n        }, 500);\n        return;\n      }\n\n      this.addCheckoutButton();\n\n      jQuery(\"input[type='radio']\").on('change', function () {\n        _this.addCheckoutButton();\n      });\n\n      var map_wrapper = jQuery(\".shiptimize-pickup\");\n      jQuery(\"body\").append(map_wrapper);\n    }\n\n    /** \n     * If the selected Shipping method allows the user to choose a pickup address we add a button \n     * We always refresh the address, because people can go back and change it and we have no way of knowing if that happened \n     * \n     * Layout options by order: \n     * if there is a label, insert after the label \n     * if there is a table, insert in the last td \n     * else insert after the selected radio \n     */\n\n  }, {\n    key: \"addCheckoutButton\",\n    value: function addCheckoutButton() {\n      jQuery(\".shiptimize-choose-pickup\").remove();\n\n      if (!this.hasPickup(this.getSelectedShipppingMethod())) {\n        return;\n      }\n\n      /** \n       * This function is declared on our mage script\n       */\n      shiptimize_get_shipping_address();\n\n      var eSelectedMethod = jQuery(jQuery(\"input[type='radio']:checked\").get(0));\n      var parentRow = eSelectedMethod.parents(\"tr\");\n\n      var eLabel = eSelectedMethod.siblings('label');\n\n      var eShiptimizeButton = jQuery(\"<span class='shiptimize-choose-pickup' >\" + \"<button class='button' type='button' onClick='shiptimize.getPickupLocations()'>\" + shiptmize_choose + '</button>' + \"<span class='shiptimize-pickup__description'></span>\" + \"</span>\");\n\n      if (eLabel.size() > 0) {\n        eShiptimizeButton.insertAfter(eLabel);\n      } else if (parentRow.size() > 0) {\n        var tds = parentRow.children(\"td\");\n        jQuery(tds.get(tds.size() - 1)).append(eShiptimizeButton);\n      } else {\n        eShiptimizeButton.insertAfter(eSelectedMethod);\n      }\n    }\n\n    /**\n     * \n     */\n\n  }, {\n    key: \"hasPickup\",\n    value: function hasPickup(mage_id) {\n      /** \n       * Shiptimize table rates adds sufix pickup if method provides pickup points \n       */\n      if (mage_id.match(/([\\d]+)_pickup/) != null) {\n        return true;\n      }\n\n      for (var x = 0; x < shiptimize_carriers.length; ++x) {\n        if (shiptimize_carriers[x].ClassName === mage_id && shiptimize_carriers[x].HasPickup) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /** \n     * @return the id of the shiptimize carrier associated with this method \n     */\n\n  }, {\n    key: \"getShiptimizeId\",\n    value: function getShiptimizeId(mage_id) {\n      var carrier_id = mage_id.match(/([\\d]+)_pickup/);\n      if (carrier_id != null) {\n        return carrier_id[1];\n      }\n\n      for (var x = 0; x < shiptimize_carriers.length; ++x) {\n        if (shiptimize_carriers[x].ClassName === mage_id) {\n          return _typeof(shiptimize_carriers[x].Id) == 'object' ? shiptimize_carriers[x].Id['0'] : shiptimize_carriers[x].Id;\n        }\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getSelectedShipppingMethod\",\n    value: function getSelectedShipppingMethod() {\n      var method = jQuery(\"input[type='radio']:checked\").val();\n      /** \n       * Mage repeats the method name \n       */\n      var parts = method.split('_');\n      return parts.length > 1 && parts[0] == parts[1] ? parts[0] : method;\n    }\n\n    /** \n     * We only include this script on checkout, so it's always true\n     */\n\n  }, {\n    key: \"isCheckout\",\n    value: function isCheckout() {\n      return true;\n    }\n\n    /** \n     * Returns the shipping data as an object in the same format that the api receives \n     * We get the address parts server side here \n     */\n\n  }, {\n    key: \"getShippingData\",\n    value: function getShippingData() {\n      return {\n        \"Address\": {\n          \"Lat\": \"\",\n          \"Long\": \"\",\n          'Streetname1': shiptimize_address.Streetname1,\n          'Streetname2': shiptimize_address.Streetname2,\n          'HouseNumber': '',\n          'NumberExtension': '',\n          'PostalCode': shiptimize_address.PostalCode,\n          'City': shiptimize_address.City,\n          'Country': shiptimize_address.Country,\n          \"State\": shiptimize_address.State\n        },\n        \"CarrierId\": this.getShiptimizeId(this.getSelectedShipppingMethod()) //in prestashop we can get this server side \n      };\n    }\n\n    /** \n     * @param Pickup pickup - a pickupPoint as received from the api \n     */\n\n  }, {\n    key: \"setPickupPoint\",\n    value: function setPickupPoint(pickup) {\n      var label = pickup.Information.Name ? pickup.Information.Name : pickup.Information.Address + \" \" + pickup.Information.ZipCode;\n\n      var data = {\n        'PointId': pickup.PointId,\n        'Label': label,\n        'Extendedinfo': pickup.Extendedinfo\n      };\n      console.log(data);\n      jQuery.getJSON(shiptimize_ajax_save_pickup, data, function (resp) {\n        console.log(resp);\n      });\n    }\n  }]);\n\n  return ShiptmizeMagento;\n}();\n\nexports.default = ShiptmizeMagento;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/shiptimize-magento.js\n");

/***/ }),

/***/ "./js/shiptimize-open-map.js":
/*!***********************************!*\
  !*** ./js/shiptimize-open-map.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shiptimizeUtils = __webpack_require__(/*! ./shiptimize-utils.js */ \"./js/shiptimize-utils.js\");\n\nvar _shiptimizeUtils2 = _interopRequireDefault(_shiptimizeUtils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ShiptimizeOpenMap = function () {\n    function ShiptimizeOpenMap() {\n        _classCallCheck(this, ShiptimizeOpenMap);\n\n        this.isScriptLoaded = false;\n        this.markers = [];\n        this.map = null;\n\n        /** \n         * the root url for the icons it's different for every platform  \n         * make sure to include a trailing / \n         */\n        this.icon_folder = shiptimize_icon_folder;\n    }\n\n    /** \n     *\n     * @param string imageUrl - full url to the icon \n     * @return L.icon object \n     */\n\n\n    _createClass(ShiptimizeOpenMap, [{\n        key: \"createIcon\",\n        value: function createIcon(imageUrl) {\n            return L.icon({\n                iconUrl: imageUrl,\n                iconSize: [50, 50], // size of the icon \n                iconAnchor: [25, 25], // point of the icon which will correspond to marker's location \n                popupAnchor: [-25, -50] // point from which the popup should open relative to the iconAnchor\n            });\n        }\n\n        /** \n         * @param decimal lat \n         * @param decimal lng \n         */\n\n    }, {\n        key: \"centerMap\",\n        value: function centerMap(lat, lng) {\n            this.map.invalidateSize();\n            var latlng = L.latLng(lat, lng);\n        }\n\n        /** \n         * if the script has not been loaded , load it. \n         * We use this function because we only want to load the script when the user clicks the button \n         */\n\n    }, {\n        key: \"grantReady\",\n        value: function grantReady() {\n            if (!this.isScriptLoaded) {\n                this.loadScript();\n            }\n        }\n\n        /**\n         *  \n         * @param shippingData, the address parts       \n         * @param f_callback , the function to call when all mighty google returns a result \n         */\n\n    }, {\n        key: \"geocode\",\n        value: function geocode(shippingData, f_callback) {\n            console.log(shippingData);\n            this.grantReady();\n\n            jQuery.getJSON(\"https://nominatim.openstreetmap.org/search?format=json&addressdetails=1\" + \"&city=\" + shippingData.Address.City + \"&country=\" + shippingData.Address.Country, {}, function (response) {\n                var geocode = {\n                    'iso2': '',\n                    'lat': '',\n                    'lng': ''\n                };\n\n                if (response.length > 0) {\n                    var location = response[0];\n\n                    geocode.iso2 = location.address.country_code;\n\n                    geocode.lat = location.lat;\n                    geocode.lng = location.lon;\n                }\n                f_callback(geocode);\n\n                console.log(response);\n            });\n        }\n    }, {\n        key: \"loadScript\",\n        value: function loadScript() {\n            if (typeof L == 'undefined') {\n                _shiptimizeUtils2.default.injectExternalScript(SHIPTIMIZE_LEAFLET_URL);\n            }\n\n            this.isScriptLoaded = true;\n            this.loadMap();\n            return;\n        }\n\n        /** \n         * Leaflet does not receive a callback so we wait here for the script to be loaded \n         */\n\n    }, {\n        key: \"loadMap\",\n        value: function loadMap() {\n            var _this = this;\n\n            if (typeof L == 'undefined') {\n                setTimeout(function () {\n                    _this.loadMap();\n                }, 1500);\n                console.log(\"Map not loaded, settimeout \");\n                return;\n            }\n\n            this.icon_selected = this.createIcon(shiptimize_icon_folder + 'selected.png');\n            this.icon_default = this.createIcon(shiptimize_icon_folder + 'default.png');\n            this.current_icon = this.icon_default;\n\n            this.map = new L.map(jQuery(\".shiptimize-pickup__map\").get(0), {\n                \"zoom\": 16,\n                \"center\": [51.505, -0.09]\n            });\n\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                \"attribution\": '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            }).addTo(this.map);\n        }\n    }, {\n        key: \"clearMarkers\",\n        value: function clearMarkers() {\n            if (this.markers.length > 0) {\n                for (var i = 0; i < this.markers.length; ++i) {\n                    this.map.removeLayer(this.markers[i]);\n                }\n            }\n            this.markers = [];\n        }\n\n        /** \n         * Add the markers to map \n         * @param array pickupPoints - an array of pickupPoints\n         */\n\n    }, {\n        key: \"addMarkers\",\n        value: function addMarkers(pickupPoints, callback) {\n            var _this2 = this;\n\n            this.pickupPoints = pickupPoints;\n\n            var _loop = function _loop(x) {\n                _this2.markers[x] = _this2.getMarker(pickupPoints[x]);\n                //    we need to do this because the values for lat,lng we have are rounded, so they will not match the ones returned by google\n                _this2.pickupPoints[x].marker = _this2.markers[x];\n\n                _this2.markers[x].on('click', function () {\n                    if (typeof callback == 'function') {\n                        callback(x);\n                    }\n                });\n            };\n\n            for (var x = 0; x < pickupPoints.length; ++x) {\n                _loop(x);\n            }\n\n            this.fitBounds();\n        }\n    }, {\n        key: \"resetMarker\",\n        value: function resetMarker(marker) {\n            marker.setIcon(this.icon_default);\n        }\n    }, {\n        key: \"selectMarker\",\n        value: function selectMarker(marker) {\n            marker.setIcon(this.icon_selected);\n        }\n\n        /** \n         * Adjust the zoom in the map to display all the markers \n         * There's a fit bounds that receives 2 corners, but calculating them is up to us. \n         * corners: top left, bottom right     \n         * then we center the map at the center of the square  \n         */\n\n    }, {\n        key: \"fitBounds\",\n        value: function fitBounds() {\n            var bottomLeft = [this.pickupPoints[0].Lat, this.pickupPoints[0].Long];\n            var topRight = [this.pickupPoints[0].Lat, this.pickupPoints[0].Long];\n\n            for (var i = 0; i < this.pickupPoints.length; ++i) {\n                var lat = this.pickupPoints[i].Lat;\n                var lng = this.pickupPoints[i].Long;\n\n                if (lat < bottomLeft[0]) {\n                    bottomLeft[0] = lat;\n                }\n\n                if (lat > topRight[0]) {\n                    topRight[0] = lat;\n                }\n\n                if (lng > topRight[1]) {\n                    topRight[1] = lng;\n                }\n\n                if (lng < bottomLeft[1]) {\n                    bottomLeft[1] = lng;\n                }\n            }\n\n            var centerX = bottomLeft[0] + (topRight[0] - bottomLeft[0]) / 2;\n            var centerY = bottomLeft[1] + (topRight[1] - bottomLeft[1]) / 2;\n\n            this.map.panTo([centerX, centerY]);\n\n            this.map.fitBounds([bottomLeft, topRight]);\n        }\n\n        /** \n         * Return a marker for the openLayers \n         * IconAnchor: The coordinates of the \"tip\" of the icon (relative to its top left corner). \n         * The icon will be aligned so that this point is at the marker's geographical location. \n         * Centered by default if size is specified, also can be set in CSS with negative margins.\n         */\n\n    }, {\n        key: \"getMarker\",\n        value: function getMarker(pickupPoint) {\n            var marker = L.marker([pickupPoint.Lat, pickupPoint.Long], {\n                \"icon\": this.current_icon,\n                \"title\": pickupPoint.Information.Name + \"\\n\" + pickupPoint.Information.Address\n            });\n            marker.addTo(this.map);\n            return marker;\n        }\n\n        /** \n         * Checks if we have an icon for this carrier.\n         * If yes then change the carrier icon\n         * If not then use the default icon\n         * \n         * @param int carrier_id - the carrier id \n         */\n\n    }, {\n        key: \"setCarrierIcon\",\n        value: function setCarrierIcon(carrier_id) {\n            var _this3 = this;\n\n            if (typeof L == 'undefined') {\n                setTimeout(function () {\n                    _this3.setCarrierIcon(carrier_id);\n                }, 200);\n                return;\n            }\n            var carrier_icon_url = this.icon_folder + '' + carrier_id + '.png';\n            this.current_icon = _shiptimizeUtils2.default.isUrlValid(carrier_icon_url) ? this.createIcon(carrier_icon_url) : this.icon_default;\n        }\n\n        /**\n         * Reset all markers  \n         * Select the marker of index idx in map \n         * @param int idx - the index to select \n         */\n\n    }, {\n        key: \"selectMarkerByIdx\",\n        value: function selectMarkerByIdx(idx) {\n            for (var i = 0; i < this.markers.length; ++i) {\n                this.markers[i].setIcon(idx == i ? this.icon_selected : this.current_icon);\n            }\n        }\n    }]);\n\n    return ShiptimizeOpenMap;\n}();\n\nexports.default = ShiptimizeOpenMap;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/shiptimize-open-map.js\n");

/***/ }),

/***/ "./js/shiptimize-utils.js":
/*!********************************!*\
  !*** ./js/shiptimize-utils.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** \n * Singleton object we can use for platform independent stuff \n */\nvar ShiptimizeUtils = function () {\n  function ShiptimizeUtils() {\n    _classCallCheck(this, ShiptimizeUtils);\n  }\n\n  /** \n   * Inject Script into the page \n   * @param string src \n   */\n\n\n  _createClass(ShiptimizeUtils, [{\n    key: \"injectExternalScript\",\n    value: function injectExternalScript(src) {\n      var s = document.createElement(\"script\");\n      s.setAttribute(\"src\", src);\n      document.body.appendChild(s);\n    }\n\n    /** \n     * Inject a script string \n     */\n\n  }, {\n    key: \"injectScript\",\n    value: function injectScript(contents) {\n      var e = document.createElement(\"script\");\n      e.value = contents;\n      document.body.appendChild(e);\n    }\n\n    /** \n     * Removes all not numeric chars from the string \n     *\n     * @param string string - the input string \n     * @return the string without chars that are not numbers \n     */\n\n  }, {\n    key: \"removeNonNumeric\",\n    value: function removeNonNumeric(string) {\n      return string.replace(/\\D/g, '');\n    }\n\n    /** \n     * Check if the given url exists and is valid\n     * We use this to check if the carrier icon exists given \n     * a url path and the naming convention {carrier_id}.svg \n     * Make sure the correct protocol is appended to the url http != https \n     * \n     * @return true it the url exists and is valid \n     */\n\n  }, {\n    key: \"isUrlValid\",\n    value: function isUrlValid(url) {\n      var http = new XMLHttpRequest();\n      http.open('HEAD', url, false);\n      http.send();\n      return http.status == 200;\n    }\n\n    /** \n     * Open a new window with the provided URL \n     * @string url \n     * @return bool if the window was opened, false if popup blocker enabled \n     */\n\n  }, {\n    key: \"openNewWindow\",\n    value: function openNewWindow(url, options) {\n      var newWin = window.open(url, '_blank', options);\n      var blocked = !newWin || newWin.closed || typeof newWin.closed == 'undefined';\n\n      return !blocked;\n    }\n  }]);\n\n  return ShiptimizeUtils;\n}();\n\nvar utils = new ShiptimizeUtils();\nexports.default = utils;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9zaGlwdGltaXplLXV0aWxzLmpzPzAwZDQiXSwibmFtZXMiOlsiU2hpcHRpbWl6ZVV0aWxzIiwic3JjIiwicyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImNvbnRlbnRzIiwiZSIsInZhbHVlIiwic3RyaW5nIiwicmVwbGFjZSIsInVybCIsImh0dHAiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJzZW5kIiwic3RhdHVzIiwib3B0aW9ucyIsIm5ld1dpbiIsIndpbmRvdyIsImJsb2NrZWQiLCJjbG9zZWQiLCJ1dGlscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7SUFHTUEsZTtBQUVGLDZCQUFjO0FBQUE7QUFFYjs7QUFHRDs7Ozs7Ozs7eUNBSXFCQyxHLEVBQUs7QUFDdEIsVUFBSUMsSUFBSUMsU0FBU0MsYUFBVCxDQUF1QixRQUF2QixDQUFSO0FBQ0FGLFFBQUVHLFlBQUYsQ0FBZSxLQUFmLEVBQXNCSixHQUF0QjtBQUNBRSxlQUFTRyxJQUFULENBQWNDLFdBQWQsQ0FBMEJMLENBQTFCO0FBQ0g7O0FBR0Q7Ozs7OztpQ0FHYU0sUSxFQUFVO0FBQ25CLFVBQUlDLElBQUlOLFNBQVNDLGFBQVQsQ0FBdUIsUUFBdkIsQ0FBUjtBQUNBSyxRQUFFQyxLQUFGLEdBQVVGLFFBQVY7QUFDQUwsZUFBU0csSUFBVCxDQUFjQyxXQUFkLENBQTBCRSxDQUExQjtBQUNIOztBQUVEOzs7Ozs7Ozs7cUNBTWlCRSxNLEVBQVE7QUFDckIsYUFBT0EsT0FBT0MsT0FBUCxDQUFlLEtBQWYsRUFBc0IsRUFBdEIsQ0FBUDtBQUNIOztBQUVEOzs7Ozs7Ozs7OzsrQkFRV0MsRyxFQUFLO0FBQ1osVUFBSUMsT0FBTyxJQUFJQyxjQUFKLEVBQVg7QUFDQUQsV0FBS0UsSUFBTCxDQUFVLE1BQVYsRUFBa0JILEdBQWxCLEVBQXVCLEtBQXZCO0FBQ0FDLFdBQUtHLElBQUw7QUFDQSxhQUFPSCxLQUFLSSxNQUFMLElBQWUsR0FBdEI7QUFDSDs7QUFFRDs7Ozs7Ozs7a0NBS2NMLEcsRUFBS00sTyxFQUFRO0FBQ3ZCLFVBQUlDLFNBQVNDLE9BQU9MLElBQVAsQ0FBWUgsR0FBWixFQUFpQixRQUFqQixFQUEyQk0sT0FBM0IsQ0FBYjtBQUNBLFVBQUlHLFVBQVUsQ0FBQ0YsTUFBRCxJQUFXQSxPQUFPRyxNQUFsQixJQUE0QixPQUFPSCxPQUFPRyxNQUFkLElBQXNCLFdBQWhFOztBQUVBLGFBQU8sQ0FBQ0QsT0FBUjtBQUNIOzs7Ozs7QUFJTCxJQUFJRSxRQUFRLElBQUl4QixlQUFKLEVBQVo7a0JBQ2V3QixLIiwiZmlsZSI6Ii4vanMvc2hpcHRpbWl6ZS11dGlscy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBcbiAqIFNpbmdsZXRvbiBvYmplY3Qgd2UgY2FuIHVzZSBmb3IgcGxhdGZvcm0gaW5kZXBlbmRlbnQgc3R1ZmYgXG4gKi9cbmNsYXNzIFNoaXB0aW1pemVVdGlscyB7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcblxuICAgIH1cblxuXG4gICAgLyoqIFxuICAgICAqIEluamVjdCBTY3JpcHQgaW50byB0aGUgcGFnZSBcbiAgICAgKiBAcGFyYW0gc3RyaW5nIHNyYyBcbiAgICAgKi9cbiAgICBpbmplY3RFeHRlcm5hbFNjcmlwdChzcmMpIHtcbiAgICAgICAgbGV0IHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgICAgICBzLnNldEF0dHJpYnV0ZShcInNyY1wiLCBzcmMpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHMpO1xuICAgIH1cblxuXG4gICAgLyoqIFxuICAgICAqIEluamVjdCBhIHNjcmlwdCBzdHJpbmcgXG4gICAgICovXG4gICAgaW5qZWN0U2NyaXB0KGNvbnRlbnRzKSB7XG4gICAgICAgIGxldCBlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcbiAgICAgICAgZS52YWx1ZSA9IGNvbnRlbnRzO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGUpO1xuICAgIH1cblxuICAgIC8qKiBcbiAgICAgKiBSZW1vdmVzIGFsbCBub3QgbnVtZXJpYyBjaGFycyBmcm9tIHRoZSBzdHJpbmcgXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc3RyaW5nIHN0cmluZyAtIHRoZSBpbnB1dCBzdHJpbmcgXG4gICAgICogQHJldHVybiB0aGUgc3RyaW5nIHdpdGhvdXQgY2hhcnMgdGhhdCBhcmUgbm90IG51bWJlcnMgXG4gICAgICovXG4gICAgcmVtb3ZlTm9uTnVtZXJpYyhzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9cXEQvZywgJycpO1xuICAgIH1cblxuICAgIC8qKiBcbiAgICAgKiBDaGVjayBpZiB0aGUgZ2l2ZW4gdXJsIGV4aXN0cyBhbmQgaXMgdmFsaWRcbiAgICAgKiBXZSB1c2UgdGhpcyB0byBjaGVjayBpZiB0aGUgY2FycmllciBpY29uIGV4aXN0cyBnaXZlbiBcbiAgICAgKiBhIHVybCBwYXRoIGFuZCB0aGUgbmFtaW5nIGNvbnZlbnRpb24ge2NhcnJpZXJfaWR9LnN2ZyBcbiAgICAgKiBNYWtlIHN1cmUgdGhlIGNvcnJlY3QgcHJvdG9jb2wgaXMgYXBwZW5kZWQgdG8gdGhlIHVybCBodHRwICE9IGh0dHBzIFxuICAgICAqIFxuICAgICAqIEByZXR1cm4gdHJ1ZSBpdCB0aGUgdXJsIGV4aXN0cyBhbmQgaXMgdmFsaWQgXG4gICAgICovIFxuICAgIGlzVXJsVmFsaWQodXJsKSB7XG4gICAgICAgIHZhciBodHRwID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgICAgIGh0dHAub3BlbignSEVBRCcsIHVybCwgZmFsc2UpO1xuICAgICAgICBodHRwLnNlbmQoKTtcbiAgICAgICAgcmV0dXJuIGh0dHAuc3RhdHVzID09IDIwMDtcbiAgICB9XG5cbiAgICAvKiogXG4gICAgICogT3BlbiBhIG5ldyB3aW5kb3cgd2l0aCB0aGUgcHJvdmlkZWQgVVJMIFxuICAgICAqIEBzdHJpbmcgdXJsIFxuICAgICAqIEByZXR1cm4gYm9vbCBpZiB0aGUgd2luZG93IHdhcyBvcGVuZWQsIGZhbHNlIGlmIHBvcHVwIGJsb2NrZXIgZW5hYmxlZCBcbiAgICAgKi8gIFxuICAgIG9wZW5OZXdXaW5kb3codXJsLCBvcHRpb25zKXtcbiAgICAgICAgbGV0IG5ld1dpbiA9IHdpbmRvdy5vcGVuKHVybCwgJ19ibGFuaycsIG9wdGlvbnMpOyBcbiAgICAgICAgbGV0IGJsb2NrZWQgPSAhbmV3V2luIHx8IG5ld1dpbi5jbG9zZWQgfHwgdHlwZW9mIG5ld1dpbi5jbG9zZWQ9PSd1bmRlZmluZWQnOyBcblxuICAgICAgICByZXR1cm4gIWJsb2NrZWQ7IFxuICAgIH1cbn1cblxuXG5sZXQgdXRpbHMgPSBuZXcgU2hpcHRpbWl6ZVV0aWxzKCk7XG5leHBvcnQgZGVmYXVsdCB1dGlsczsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./js/shiptimize-utils.js\n");

/***/ }),

/***/ "./scss/shiptimize.scss":
/*!******************************!*\
  !*** ./scss/shiptimize.scss ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zY3NzL3NoaXB0aW1pemUuc2Nzcz9lYzk3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vc2Nzcy9zaGlwdGltaXplLnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./scss/shiptimize.scss\n");

/***/ }),

/***/ "./shiptmize.js":
/*!**********************!*\
  !*** ./shiptmize.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(/*! ./scss/shiptimize.scss */ \"./scss/shiptimize.scss\");\n\n__webpack_require__(/*! ./css/leaflet.css */ \"./css/leaflet.css\");\n\nvar _shiptimizeUtils = __webpack_require__(/*! ./js/shiptimize-utils.js */ \"./js/shiptimize-utils.js\");\n\nvar _shiptimizeUtils2 = _interopRequireDefault(_shiptimizeUtils);\n\nvar _shiptimizeMagento = __webpack_require__(/*! ./js/shiptimize-magento.js */ \"./js/shiptimize-magento.js\");\n\nvar _shiptimizeMagento2 = _interopRequireDefault(_shiptimizeMagento);\n\nvar _shiptimizeGmaps = __webpack_require__(/*! ./js/shiptimize-gmaps.js */ \"./js/shiptimize-gmaps.js\");\n\nvar _shiptimizeGmaps2 = _interopRequireDefault(_shiptimizeGmaps);\n\nvar _shiptimizeOpenMap = __webpack_require__(/*! ./js/shiptimize-open-map.js */ \"./js/shiptimize-open-map.js\");\n\nvar _shiptimizeOpenMap2 = _interopRequireDefault(_shiptimizeOpenMap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** \n * Class Shiptimize depends on jQuery. \n * Check if we are meant to append a map \n * \n * Platform dependent functions marked with   * @platformDependent \n */\nvar Shiptimize = function () {\n    function Shiptimize(ajax_url) {\n        _classCallCheck(this, Shiptimize);\n\n        this.markers = []; //pickup {lat, lng} \n        this.isMapLoaded = false;\n        this.gmaps_key = shiptimize_maps_key;\n        this.openMapMarkerIcons = {};\n        this.ajax_url = ajax_url; // platform dependent \n\n        this.platform = new _shiptimizeMagento2.default(this.ajax_url);\n\n        this.map = shiptimize_maps_key ? new _shiptimizeGmaps2.default(shiptimize_maps_key) : new _shiptimizeOpenMap2.default();\n        this.platform.isCheckout();\n    }\n\n    /** \n     * Show the map to the user \n     */\n\n\n    _createClass(Shiptimize, [{\n        key: 'showMap',\n        value: function showMap() {\n            this.map.grantReady();\n            this.userScroll = jQuery('html,body').scrollTop();\n            jQuery('html,body').scrollTop(0);\n            jQuery(\".shiptimize-pickup\").addClass(\"active\");\n        }\n\n        /** \n         * Hide the map   \n         */\n\n    }, {\n        key: 'hideMap',\n        value: function hideMap() {\n            jQuery(\".shiptimize-pickup\").removeClass(\"active\");\n            jQuery(\".shiptimize-pickup__error\").hide();\n            jQuery('html,body').scrollTop(this.userScroll);\n        }\n    }, {\n        key: 'clearMarkers',\n        value: function clearMarkers() {\n            this.map.clearMarkers();\n        }\n\n        /** \n         * Generate the inputs for the user to append extra info if necessary \n         * The id of these fields is in the format shiptimize_extra_{PointId}_{FieldId}\n         */\n\n    }, {\n        key: 'getExtendedInfoHtml',\n        value: function getExtendedInfoHtml(pickupPoint) {\n            if (!pickupPoint.ExtendedInfo || typeof pickupPoint.ExtendedInfo.length == 'undefined') {\n                return \"\";\n            }\n\n            var html = '';\n\n            for (var x = 0; pickupPoint.ExtendedInfo && x < pickupPoint.ExtendedInfo.length; ++x) {\n                var extraInfo = pickupPoint.ExtendedInfo[x];\n                html += '<div class=\"shiptimize-pickup__extended\">' + '<label class=\"shiptimize-pickup__extended_label \">' + extraInfo.Tekst + '</label>' + '<input type=\"text\" name=\"shiptimize_pickup_extended_value\" value=\"\" id=\"shiptimize_extra_' + pickupPoint.PointId + '_' + extraInfo.FieldId + '\"/> ' + '<input type=\"hidden\" name=\"shiptimize_pickup_extended_id\" id=\"shiptimize_pickup\" value=\"' + extraInfo.FieldId + '\"/> ' + '</div>';\n            }\n\n            return html;\n        }\n\n        /**\n         * Reset all markers  \n         * Select the marker of index idx in map \n         */\n\n    }, {\n        key: 'selectPointFromListInMap',\n        value: function selectPointFromListInMap(idx) {\n            jQuery(\"input[name='shiptimize__point']\").prop('checked', false);\n            this.map.selectMarkerByIdx(idx);\n\n            jQuery(jQuery(\"input[name='shiptimize__point']\").get(idx)).prop('checked', true);\n        }\n\n        /** \n         * When the user clicks the validate button \n         */\n\n    }, {\n        key: 'selectFromList',\n        value: function selectFromList() {\n            var idx = jQuery(\"input[name='shiptimize__point']:checked\").val();\n            var pickup = this.pickupPoints[idx];\n            var extra = '';\n\n            for (var i = 0; pickup.ExtendedInfo && i < pickup.ExtendedInfo.length; ++i) {\n                extra += \"<br/>\" + pickup.ExtendedInfo[i].Tekst + ': ' + jQuery(\"#shiptimize_extra_\" + pickup.PointId + \"_\" + pickup.ExtendedInfo[i].FieldId).val();\n            }\n\n            jQuery(\".shiptimize-pickup__description\").html(shiptimize_selected_pickup + \" : \" + pickup.Information.Name + \" \" + pickup.Information.Address + \" \" + extra);\n\n            this.platform.setPickupPoint(pickup);\n            this.hideMap();\n        }\n\n        /** \n         *  Returns the distance between 2 (lat,lng) points in kms \n         */\n\n    }, {\n        key: 'getDistance',\n        value: function getDistance(latlng, latlng2) {\n\n            var R = 6371e3; // metres\n            var φ1 = latlng.lat().toRadians();\n            var φ2 = latlng2.lng().toRadians();\n\n            var Δφ = (latln2.lat() - latlng.lng()).toRadians();\n            var Δλ = (latln2.lng() - latlng.lon()).toRadians();\n\n            var a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n            var d = Math.floor(R * c / 1000);\n        }\n\n        /** \n         * Show the map and query the server for pickup locations near the shipping address provided by the client\n         * center the map on the first point \n         * remove old markers \n         * add the new markers  \n         */\n\n    }, {\n        key: 'getPickupLocations',\n        value: function getPickupLocations() {\n            var _this = this;\n\n            this.showMap();\n\n            var data = this.platform.getShippingData();\n            data.action = 'shiptimize_pickup_locations';\n\n            this.map.setCarrierIcon(data.CarrierId);\n\n            this.map.geocode(data, function (geocode) {\n                _this.getPickupLocationsFromGeocodedAddr(geocode, data);\n            });\n        }\n    }, {\n        key: 'getPickupLocationsFromGeocodedAddr',\n        value: function getPickupLocationsFromGeocodedAddr(geocode, data) {\n            var _this2 = this;\n\n            this.resetUI();\n\n            data.Address.Country = geocode.iso2;\n            data.Address.Long = geocode.lng;\n            data.Address.Lat = geocode.lat;\n\n            console.log(data);\n            console.log(geocode);\n\n            jQuery.getJSON(this.ajax_url, data, function (pickupPoints) {\n                if (pickupPoints.length == 0) {\n                    console.log(\"no pickup points found for this address \");\n                    return;\n                }\n\n                console.log(pickupPoints);\n                if (pickupPoints.Error.Id == 0 && pickupPoints.Point.length > 0) {\n                    jQuery(\".shiptimize-pickup__options,.shiptimize-pickup__map\").show();\n                    _this2.setPickupLocations(pickupPoints.Point);\n                } else {\n                    console.log(\"The api returned an error \", pickupPoints.Error); //pickupPoints.Error.Info || \n                    _this2.pickupError(shiptimize_no_points_found);\n                }\n            });\n        }\n    }, {\n        key: 'resetUI',\n        value: function resetUI() {\n            jQuery(\".shiptimize-pickup__error\").hide();\n            this.map.clearMarkers();\n        }\n\n        /** \n         * @param string info - the message to display \n         */\n\n    }, {\n        key: 'pickupError',\n        value: function pickupError(info) {\n            this.pickupPoints = [];\n\n            var eError = jQuery(\".shiptimize-pickup__error\");\n            eError.html(info);\n            eError.show();\n\n            jQuery(\".shiptimize-pickup__options,.shiptimize-pickup__map\").hide();\n        }\n\n        /** \n         * Append the pickup Locations to the map\n         * @param array pickupPoints - an array of available pickup points \n         */\n\n    }, {\n        key: 'setPickupLocations',\n        value: function setPickupLocations(pickupPoints) {\n            var _this3 = this;\n\n            jQuery(\".shiptimize-pickup__error\").hide();\n\n            this.pickupPoints = pickupPoints;\n            this.map.clearMarkers();\n            this.map.centerMap(this.pickupPoints[0].Lat, this.pickupPoints[1].Long);\n            this.map.addMarkers(pickupPoints, function (idx) {\n                _this3.selectPointFromListInMap(idx);\n            });\n            this.setOptionsForAddress(pickupPoints);\n        }\n\n        /** \n         * @param pickupPoints[] - [] of pickup points returned by the api \n         */\n\n    }, {\n        key: 'setOptionsForAddress',\n        value: function setOptionsForAddress(pickupPoints) {\n\n            var html = '';\n            for (var i = 0; i < pickupPoints.length; ++i) {\n                html += '<div class=\"shiptimize-pickup__point\">' + '<input type=\"radio\" value=\"' + i + '\" name=\"shiptimize__point\"  onclick=\"shiptimize.selectPointFromListInMap(' + i + ')\"/>' + '<span class=\"shiptimize-pickup__point_description\" onclick=\"shiptimize.selectPointFromListInMap(' + i + ')\">' + '<span>' + (pickupPoints[i].Information.Name ? pickupPoints[i].Information.Name + '<br/>' : '') + pickupPoints[i].Information.Address + '</span>' + this.getExtendedInfoHtml(pickupPoints[i]) + '</span>' + '</div>';\n            }\n            console.log(html);\n\n            jQuery(\".shiptimize-pickup__other\").html(html);\n        }\n    }, {\n        key: 'loadMap',\n        value: function loadMap() {\n            this.map.loadMap();\n        }\n    }]);\n\n    return Shiptimize;\n}();\n\nif (typeof jQuery != 'undefined') {\n    jQuery(function () {\n        window.shiptimize = new Shiptimize(shiptimize_ajax_pickup_points);\n    });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./shiptmize.js\n");

/***/ })

/******/ });